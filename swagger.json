{
  "openapi": "3.0.1",
  "info": {
    "title": "WestMarches API",
    "description": "West Marches API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local Development"
    },
    {
      "url": "http://api.westmarchesapi.net/",
      "description": "Deployed"
    }
  ],
  "paths": {
    "/api/campaign/{id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          }
        }
      }
    },
    "/api/campaign": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Campaign"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          }
        }
      }
    },
    "/api/character/dndBeyond/{id}": {
      "get": {
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/character/dndBeyond": {
      "post": {
        "tags": [
          "Character"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/character/my": {
      "get": {
        "tags": [
          "Character"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/discord/close": {
      "get": {
        "tags": [
          "Discord"
        ],
        "operationId": "Close Discord Server",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/discord/stack": {
      "get": {
        "tags": [
          "Discord"
        ],
        "operationId": "Get incoming for Discord Server",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/discord/store/{id}": {
      "get": {
        "tags": [
          "Discord"
        ],
        "operationId": "Add Store to Discord Server",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/registration": {
      "post": {
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Game_system": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "format": "int32"
      },
      "Item": {
        "required": [
          "currencyValue",
          "itemName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "homeBrewOrigin": {
            "$ref": "#/components/schemas/Campaign"
          },
          "itemName": {
            "type": "string"
          },
          "currencyValue": {
            "type": "integer",
            "format": "int32"
          },
          "game_System": {
            "$ref": "#/components/schemas/Game_system"
          }
        },
        "additionalProperties": false
      },
      "Stock": {
        "required": [
          "discountPercentage"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "discountFixed": {
            "type": "integer",
            "format": "int32"
          },
          "unlimited": {
            "type": "boolean"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserRoles": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Character": {
        "required": [
          "alive",
          "currency",
          "experience",
          "inspiration",
          "level",
          "name",
          "readyDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "server": {
            "$ref": "#/components/schemas/Campaign"
          },
          "name": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "inspiration": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "integer",
            "format": "int32"
          },
          "format": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "experience": {
            "type": "integer",
            "format": "int32"
          },
          "experienceCap": {
            "type": "integer",
            "format": "int32"
          },
          "alive": {
            "type": "boolean"
          },
          "inventory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stock"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoles"
            },
            "nullable": true
          },
          "readyDate": {
            "type": "string",
            "format": "date-time"
          },
          "ddBeyond": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UserCredentials": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "oAuthId": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "dateCreated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "characters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Character"
            },
            "nullable": true
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserCredentials"
            },
            "nullable": true
          },
          "campaignsOwned": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Campaign_Status": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Guild": {
        "required": [
          "discordId",
          "guildName"
        ],
        "type": "object",
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "discordId": {
            "type": "integer",
            "format": "int64"
          },
          "guildName": {
            "type": "string"
          },
          "storeCategoryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Campaign": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "gameSystem": {
            "$ref": "#/components/schemas/Game_system"
          },
          "title": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "status": {
            "$ref": "#/components/schemas/Campaign_Status"
          },
          "guild": {
            "$ref": "#/components/schemas/Guild"
          }
        },
        "additionalProperties": false
      },
      "IRequest": {
        "type": "object",
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}