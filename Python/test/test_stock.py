# coding: utf-8

"""
    WestMarches API

    West Marches API  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.stock import Stock  # noqa: E501
from openapi_client.rest import ApiException

class TestStock(unittest.TestCase):
    """Stock unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Stock
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.stock.Stock()  # noqa: E501
        if include_optional :
            return Stock(
                id = '', 
                discount_percentage = 1.337, 
                discount_fixed = 56, 
                unlimited = True, 
                amount = 56, 
                item = openapi_client.models.item.Item(
                    id = '', 
                    home_brew_origin = openapi_client.models.campaign.Campaign(
                        id = '', 
                        game_system = 0, 
                        title = '', 
                        owner = openapi_client.models.user.User(
                            id = '', 
                            given_name = '', 
                            family_name = '', 
                            date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            characters = [
                                openapi_client.models.character.Character(
                                    id = '', 
                                    server = openapi_client.models.campaign.Campaign(
                                        id = '', 
                                        title = '', 
                                        status = 0, 
                                        guild = openapi_client.models.guild.Guild(
                                            campaign = openapi_client.models.campaign.Campaign(
                                                id = '', 
                                                title = '', ), 
                                            discord_id = 56, 
                                            guild_name = '', 
                                            store_category_name = '', ), ), 
                                    name = '', 
                                    level = 56, 
                                    inspiration = 56, 
                                    currency = 56, 
                                    format = '', 
                                    experience = 56, 
                                    experience_cap = 56, 
                                    alive = True, 
                                    inventory = [
                                        openapi_client.models.stock.Stock(
                                            id = '', 
                                            discount_percentage = 1.337, 
                                            discount_fixed = 56, 
                                            unlimited = True, 
                                            amount = 56, 
                                            price = 56, )
                                        ], 
                                    roles = [
                                        openapi_client.models.user_roles.UserRoles(
                                            id = '', 
                                            user = openapi_client.models.user.User(
                                                id = '', 
                                                given_name = '', 
                                                family_name = '', 
                                                date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                credentials = [
                                                    openapi_client.models.user_credentials.UserCredentials(
                                                        id = '', 
                                                        o_auth_id = '', )
                                                    ], 
                                                campaigns_owned = [
                                                    openapi_client.models.campaign.Campaign(
                                                        id = '', 
                                                        title = '', )
                                                    ], ), 
                                            role_name = '', )
                                        ], 
                                    ready_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    dd_beyond = 56, )
                                ], 
                            credentials = [
                                openapi_client.models.user_credentials.UserCredentials(
                                    id = '', 
                                    o_auth_id = '', )
                                ], 
                            campaigns_owned = [
                                openapi_client.models.campaign.Campaign(
                                    id = '', 
                                    title = '', )
                                ], ), 
                        status = 0, 
                        guild = openapi_client.models.guild.Guild(
                            discord_id = 56, 
                            guild_name = '', 
                            store_category_name = '', ), ), 
                    item_name = '', 
                    currency_value = 56, 
                    game_system = 0, ), 
                price = 56
            )
        else :
            return Stock(
                discount_percentage = 1.337,
        )

    def testStock(self):
        """Test Stock"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
